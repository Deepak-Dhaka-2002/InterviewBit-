string Solution::solve(string A) {
    vector<int> exist;
    queue<char> q;
    string ans;

    int n = A.size();
    
    exist.resize(26, 0);
    
    for(int i =0; i<n; i++)
    {
        if(exist[A[i] - 'a'] == 0)
        {
            exist[A[i] - 'a'] = 1;
            q.push(A[i]);
        }
        else
        {
             exist[A[i] - 'a'] = 2;
        }
        
        while(!q.empty() && exist[q.front() - 'a'] == 2)
        {
           // cout<<"i = "<< i<<" pop = "<< q.back()<<endl;
            q.pop();
        }
        
        if(q.empty())
            ans.push_back('#');
        else
            ans.push_back(q.front());
    }

    

    return ans;
} 
