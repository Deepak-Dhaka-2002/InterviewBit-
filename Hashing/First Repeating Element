int Solution::solve(vector<int> &A) {
    map<int,int> m;

    for(auto i : A) 
       m[i]++;

    for(auto i : A) 
      if(m[i]>1) 
        return i;
    return -1;
}

---Second method : 

//bool findinmap(vector<int> &map, int a){
//    int loc = a%n;
//    while(map[loc%n]!=-1 && map[loc%n]!=a)loc++;
//    if(map[loc%n]==-1){
//        map[loc%n]=a;
//        return 0;
//    }
//    else return 1;
//}
//
//int Solution::solve(vector<int> &A) {
//    int m = A.size(),ans=-1;
//    n = 20*m;
//    vector<int> map(n,-1);
//    for(int i=m-1; i>=0; i--){
//        if(findinmap(map,A[i]))ans=A[i];
//    }
//    return ans;
//}
